;; Polling variables
(defpoll time :interval "1s"
              `date +"%H:%M:%S"`)

;; Listeners
(deflisten workspaces :initial "[]" "scripts/get_workspaces")
(deflisten current_workspace :initial "1" "scripts/get_current_workspace")
(deflisten window :initial "..." "scripts/get_window_title")
(deflisten volume :initial "0%" "scripts/volume")
(defpoll batterylevel :interval "5s" "scripts/battery")

;; Windows
(defwindow bar
           :monitor 0
           :geometry (geometry :x "0%"
                               :y "0%"
                               :width "100%"
                               :height "30px"
                               :anchor "top center")
           :stacking "fg"
           :exclusive true
           :windowtype "dock"
           (bar))

;; Widgets
(defwidget bar []
           (centerbox :class "bar"
                (leftside)
                (box :class "info" (label :text "${window}"))
                (rightside)))

(defwidget rightside []
           (box :halign "end"
                      (ram)
                      (cpu)
                      (battery)
                      (vol)
                      (clock)))

(defwidget clock []
           (box :class "info"
                      (label :text time)))

(defwidget battery []
           (box :class "info"
                      (label :text "${batterylevel}")))

(defwidget ram []
           (box :class "info"
                      (label :text "󰍛 ${round(EWW_RAM.used_mem_perc, 0)}%")))

(defwidget cpu []
           (box :class "info"
                      (label :text "󰻠 ${round(EWW_CPU.avg, 0)}%")))

(defwidget vol []
           (box :class "info"
                       (label :text "${volume}")))

(defwidget leftside []
           (box :halign "start"
                      (workspaces)))

(defwidget workspaces []
           (box :class "info workspaces"
           (box :space-evenly false ; SET MAX WIDTH TO 25%
                :spacing 7
                (for ws in workspaces
                      (eventbox :onclick "hyprctl dispatch workspace ${ws.id}"
                                (box :class "workspace-entry"
                                (label :text "${ws.id}" :class "workspace-entry ${ws.windows > 0 ? "occupied" : "empty"} ${ws.id == current_workspace ? "current" : "inactive"}" )))))))
