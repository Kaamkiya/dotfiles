;; Polling variables
(defpoll time :interval "1s"
              `date +"%Y/%m/%d %H:%M:%S"`)
(defpoll current_workspace :interval "0.02s" "scripts/get_current_workspace")
(defpoll batterylevel :interval "5s" "scripts/battery")

;; Listeners
(deflisten workspaces :initial "[]" "scripts/get_workspaces")
(deflisten window :initial "..." "scripts/get_window_title")
(deflisten volume :initial "0%" "scripts/volume")
(deflisten wifi :initial "0" "scripts/wifi")
(deflisten brightness :inital "0%" "scripts/brightness")

;; Windows
(defwindow bar
           :monitor 0
           :geometry (geometry :x "0%"
                               :y "0%"
                               :width "100%"
                               :height "30px"
                               :anchor "top center")
           :stacking "fg"
           :exclusive true
           :windowtype "dock"
           (bar))

;; Widgets
(defwidget bar []
           (box :class "bar"
                (box :halign "start" :class "info" (label :text "${window}"))
                (rightside)))

(defwidget rightside []
           (box :halign "end" :space-evenly false
                      (wifi)
                      (ram)
                      (cpu)
                      (battery)
                      (brightness)
                      (vol)
                      (datetime)))

(defwidget datetime []
           (box :class "info"
                      (label :text time)))

(defwidget battery []
           (box :class "info"
                      (label :text "${batterylevel}")))

(defwidget ram []
           (box :class "info"
                      (label :text "󰍛 ${round(EWW_RAM.used_mem_perc, 0)}%")))

(defwidget cpu []
           (box :class "info"
                      (label :text "󰻠 ${round(EWW_CPU.avg, 0)}%")))

(defwidget vol []
           (box :class "info"
                       (label :text "${volume}")))

(defwidget wifi []
           (box :class "info"
                      (label :text "${wifi}")))

(defwidget brightness []
           (box :class "info"
                      (label :text "${brightness}")))
